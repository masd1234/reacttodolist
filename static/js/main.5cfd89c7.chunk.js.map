{"version":3,"sources":["components/Counter/Counter.js","components/SearchBar/SearchBar.js","components/TodoContainer/TodoContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","todos","taskDone","className","id","length","SearchBar","inputState","inputValueCategory","setinputValueCategory","setinputValue","clickInput","htmlFor","value","onChange","e","target","type","label","map","option","i","onClick","TodoContainer","todoState","setTodos","item","category","task","parentNode","classList","toggle","checkItems","filteredArr","filter","el","parseInt","deleteItems","App","useState","inputValueTask","setinputValueTask","setTaskDone","preventDefault","newValue","Math","floor","random","complete","alert","onKeyPress","charCode","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cfd89c7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Counter.css\";\r\n\r\nconst Counter = ({ todos, taskDone }) => {\r\n  return (\r\n    <div className=\"containerCounter\">\r\n      <div className=\"count\" id=\"todosCount\">\r\n        <p>Todos:</p>\r\n        <h1>{todos.length}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nconst SearchBar = ({\r\n  inputState,\r\n  inputValueCategory,\r\n  setinputValueCategory,\r\n  setinputValue,\r\n  clickInput,\r\n}) => {\r\n  const options = [\r\n    {\r\n      label: \"\",\r\n      value: \"\",\r\n    },\r\n    {\r\n      label: \"Home\",\r\n      value: \"Home\",\r\n    },\r\n    {\r\n      label: \"School\",\r\n      value: \"School\",\r\n    },\r\n    {\r\n      label: \"Work\",\r\n      value: \"Work\",\r\n    },\r\n    {\r\n      label: \"Finance\",\r\n      value: \"Finance\",\r\n    },\r\n    {\r\n      label: \"Miscellaneous\",\r\n      value: \"Miscellaneous\",\r\n    },\r\n  ];\r\n\r\n  const inputReaderTask = (e) => {\r\n    setinputValue(e.target.value);\r\n  };\r\n\r\n  const inputReaderCategory = (e) => {\r\n    setinputValueCategory(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"logo\">My Todo List</h1>\r\n\r\n      <div className=\"inputContainer\">\r\n        <div>\r\n          <label className=\"label\" htmlFor=\"category\">\r\n            Category:\r\n          </label>\r\n\r\n          <select\r\n            value={inputValueCategory}\r\n            onChange={inputReaderCategory}\r\n            className=\"input\"\r\n            type=\"text\"\r\n            id=\"inputCategory\"\r\n          >\r\n            {options.map((option, i) => (\r\n              <option key={i} value={option.value}>\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label className=\"label\" htmlFor=\"todo\">\r\n            Todo:\r\n          </label>\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            id=\"inputTodo\"\r\n            onChange={inputReaderTask}\r\n            value={inputState}\r\n          ></input>\r\n        </div>\r\n        <button className=\"button\" onClick={clickInput}>\r\n          Add\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./TodoContainer.css\";\r\n\r\nconst TodoContainer = ({ todoState, setTodos }) => {\r\n  const checkItems = (e) => {\r\n    e.target.parentNode.parentNode.classList.toggle(\"taskDone\");\r\n  };\r\n\r\n  const deleteItems = (e) => {\r\n    let filteredArr = todoState.filter((el) => {\r\n      return el.id !== parseInt(e.target.id);\r\n    });\r\n\r\n    setTodos([...filteredArr]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"todosTitle\">\r\n        <h1>Todos:</h1>\r\n      </div>\r\n      <div className=\"todosContainer\">\r\n        {todoState.map((item, i) => {\r\n          return (\r\n            <div className=\"itemContainer\" id={item.id} key={i}>\r\n              <div className=\"categoryContainer\">\r\n                <h1>Category: {item.category}</h1>\r\n              </div>\r\n              <div className=\"taskContainer\">\r\n                <h1>Task: {item.task}</h1>\r\n                <button\r\n                  className=\"buttonTask buttonTaskDone\"\r\n                  id={item.id}\r\n                  onClick={(e) => checkItems(e)}\r\n                >\r\n                  V\r\n                </button>\r\n                <button\r\n                  className=\"buttonTask buttonTaskDetele\"\r\n                  id={item.id}\r\n                  onClick={(e) => deleteItems(e)}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TodoContainer;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Counter from \"./components/Counter/Counter\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport TodoContainer from \"./components/TodoContainer/TodoContainer\";\n\nfunction App() {\n  const [inputValueTask, setinputValueTask] = useState(\"\");\n  const [inputValueCategory, setinputValueCategory] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [taskDone, setTaskDone] = useState(0);\n\n  const clickInput = (e) => {\n    e.preventDefault();\n\n    if (!inputValueCategory || !inputValueTask) {\n      alert(\"Please fill all the inputs\");\n    } else {\n      let numb = Math.floor(Math.random() * 1000);\n      let newValue = {\n        id: numb,\n        category: inputValueCategory,\n        task: inputValueTask,\n        complete: false,\n      };\n\n      setTodos([...todos, newValue]);\n\n      setinputValueTask(\"\");\n    }\n  };\n\n  const handleKeypress = (e) => {\n    if (e.charCode === 13) {\n      clickInput(e);\n    }\n  };\n\n  return (\n    <div className=\"App\" onKeyPress={handleKeypress}>\n      <SearchBar\n        inputState={inputValueTask}\n        setinputValue={setinputValueTask}\n        inputValueCategory={inputValueCategory}\n        setinputValueCategory={setinputValueCategory}\n        todoState={todos}\n        setTodos={setTodos}\n        clickInput={clickInput}\n      />\n      <Counter todos={todos} taskDone={taskDone} />\n      <TodoContainer\n        todoState={todos}\n        setTodos={setTodos}\n        taskDone={taskDone}\n        setTaskDone={setTaskDone}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}